version: '3'

services:
  strapi:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 3G
    env_file:
      - .env
    environment:
      - DATABASE_HOST=postgres
    volumes:
      # - ./strapi:/opt/app  # 將本地的 strapi 目錄掛載到容器的 /opt/app 目錄，這樣可以在容器內部直接訪問本地的代碼。
      - /opt/app/node_modules  # 將容器內的 node_modules 目錄掛載，這樣可以避免每次重啟容器時重新安裝依賴，提升性能。
    ports:
      - "1337:1337"
    depends_on:
      - postgres
    networks:
      - strapi-network

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: zhi_zhao_tech_strapi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1qaz2wsx
    # volumes: 定義了容器的持久化存儲，這裡將名為 postgres-data 的卷掛載到 PostgreSQL 的數據目錄 /var/lib/postgresql/data，確保數據在容器重啟或刪除後仍然存在。
    # 在這裡，A 是 postgres-data（Docker 端的卷），B 是 /var/lib/postgresql/data（容器內的路徑）。
    # A 是 Docker 端的映射檔案，因為它是定義在 Docker 卷中的數據存儲。
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - strapi-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - strapi
    networks:
      - strapi-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres-data:

networks:
  strapi-network:
    name: strapi-network
    driver: bridge